###################################################################################################
#### Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
####
#### Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file
#### except in compliance with the License. A copy of the License is located at
####
####     http://aws.amazon.com/apache2.0/
####
#### or in the "license" file accompanying this file. This file is distributed on an "AS IS"
#### BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#### License for the specific language governing permissions and limitations under the License.
###################################################################################################

###################################################################################################
#### This configuration file downloads a private key from Amazon S3 and configures Apache to use it
#### to terminate HTTPS connections on port 443. Replace the values in the Parameters section with
#### the URL of the private key in Amazon S3, and the contents of the public certificate. To
#### download the file, your environment's instance profile must have S3ReadOnlyAccess or a similar
#### policy attached. In a single instance environment, also include 
#### https-singleinstance-securitygroup.config to allow traffic to the instance on port 443.
#### If your application is not named "application.py" or is not in the root of your source bundle,
#### replace the application name in the Apache config below.
###################################################################################################

packages:
  yum:
    mod24_ssl : []

container_commands:
  0removesslconf:
    command: "rm -f /etc/httpd/conf.d/ssl.conf"
  1getcertbot-auto:
    command: "wget -nc https://dl.eff.org/certbot-auto -P /usr/local/bin && chmod 700 /usr/local/bin/certbot-auto"
    test: '[[ "$ENV_NAME" = "production" ]]'
  2killhttpd:
    command: "killall httpd"
    test: '[[ "$ENV_NAME" = "production" ]]'
    ignoreErrors: true
  3runcertbot-auto:
    command: "certbot-auto certonly --debug -n --standalone --agree-tos -m nsm-siriusproject@csus.edu -d siriusproject1.org"
    test: '[[ "$ENV_NAME" = "production" ]]'
    ignoreErrors: true
  4starthttpd:
    command: "/usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf start httpd"
    test: '[[ "$ENV_NAME" = "production" ]]'
  7enableautorenewal:
    command: "grep certbot /etc/crontab || echo '0 12 * * 6 root certbot-auto renew' >> /etc/crontab"
    test: '[[ "$ENV_NAME" = "production" ]]'
